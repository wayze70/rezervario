@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Reservation.Shared.Authorization
@inject ISnackbar Snackbar
@inject IAccountService AccountService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize(Roles = nameof(Role.Admin))]

<MudExpansionPanel Text="Zrušení účtu" Class="mt-5">
    <EditForm Model="@DeleteRequest" OnValidSubmit="OnDeleteAccountValidSubmit">
        <EmailInput Variant="Variant.Text" Adornment="Adornment.None" @bind-Value="DeleteRequest.Email"/>
        <MudTextField MaxLength="100" T="string" Label="Heslo" @bind-Value="DeleteRequest.Password"
                      Required="true" InputType="InputType.Password"/>
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Error"
                   Variant="Variant.Filled" Class="mt-4">
            Smazat účet
        </MudButton>
    </EditForm>
</MudExpansionPanel>

@code {
    public DeleteAccountRequest DeleteRequest { get; set; } = new();

    private async Task OnDeleteAccountValidSubmit()
    {
        var result = await AccountService.DeleteAccount(DeleteRequest);

        if (result.IsSuccess)
        {
            Snackbar.Add("Účet byl úspěšně smazán.", Severity.Success);
            
            if (AuthenticationStateProvider is CustomAuthenticationStateProvider authStateProvider)
            {
                await authStateProvider.MarkUserAsLoggedOut();
            }
            
            NavigationManager.NavigateTo(Constants.Routes.Login);
        }

        else
        {
            Snackbar.Add("Nepodařilo se smazat účet. Zkontrolujte své údaje.", Severity.Error);
        }
    }
}