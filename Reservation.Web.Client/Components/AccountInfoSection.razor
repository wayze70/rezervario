@using Microsoft.AspNetCore.Authorization
@using Reservation.Shared.Authorization
@inject ISnackbar Snackbar
@inject IAccountService AccountService

@attribute [Authorize(Roles = nameof(Role.Admin))]

<MudExpansionPanel Text="Informace o účtu" @bind-Expanded="IsPanelExpanded">
    <MudText>
        Zde zadejte informace o účtu. Tyto informace budou zobrazeny na stránce pro návštěvníky.
    </MudText>
    <EditForm Model="@AccountInfo" OnValidSubmit="OnAccountInfoValidSubmit">
        <MudTextField MaxLength="250" T="string" Label="Organizace" @bind-Value="AccountInfo.Organization"/>
        <MudTextField MaxLength="1000" AutoGrow="true" T="string" Label="Popis" @bind-Value="AccountInfo.Description"/>
        <MudTextField MaxLength="320" AutoGrow="true" T="string" Label="Kontaktní email pro zákazníky"
                      @bind-Value="AccountInfo.ContactEmail" Required="true"/>
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled" Class="mt-4">
            Uložit informace o účtu
        </MudButton>
    </EditForm>
</MudExpansionPanel>

@code {
    AccountInfoResponse AccountInfo { get; set; } = new();

    bool IsPanelExpanded { get; set; } = false;
    private bool _isFetching = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadAccountInfo();
        IsPanelExpanded = !_isFetching &&(string.IsNullOrWhiteSpace(AccountInfo.Organization)
                                         || string.IsNullOrWhiteSpace(AccountInfo.Description));
    }

    private async Task OnAccountInfoValidSubmit()
    {
        var updateRequest = new UpdateAccountInfoRequest
        {
            Organization = AccountInfo.Organization,
            Description = AccountInfo.Description,
            ContactEmail = AccountInfo.ContactEmail
        };

        var result = await AccountService.UpdateAccountInfo(updateRequest);

        if (result.IsSuccess)
        {
            Snackbar.Add("Údaje o účtu byly úspěšně aktualizovány.", Severity.Success);
            await LoadAccountInfo();
        }
        else
        {
            Snackbar.Add("Nepodařilo se aktualizovat údaje o účtu.", Severity.Error);
        }
    }

    private async Task LoadAccountInfo()
    {
        _isFetching = true;
        var accountInfoResult = await AccountService.GetAccountInfo();
        if (accountInfoResult is { IsSuccess: true, Data: not null })
        {
            AccountInfo = accountInfoResult.Data;
        }
        else
        {
            Snackbar.Add("Nepodařilo se načíst údaje o účtu.", Severity.Error);
        }

        _isFetching = false;
    }
}