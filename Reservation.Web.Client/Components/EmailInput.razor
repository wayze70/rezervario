@using Reservation.Shared.Common
@namespace Reservation.Web.Client.Components

<MudTextField T="string" 
              Label="@Label"
              Value="@Value"
              ValueChanged="@OnValueChanged"
              Required="@Required"
              InputType="InputType.Email"
              Pattern="@Utils.EmailRegexPattern"
              RequiredError="@RequiredError"
              MaxLength="320"
              Variant="@Variant"
              FullWidth="@FullWidth"
              Adornment="@Adornment"
              AdornmentIcon="@AdornmentIcon"
/>

@code {
    [Parameter]
    public string Label { get; set; } = "Email";

    [Parameter]
    public string Value { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public bool Required { get; set; } = true;

    [Parameter]
    public string RequiredError { get; set; } = "Email je povinn√Ω";
    
    [Parameter]
    public Variant Variant { get; set; } = Variant.Outlined;
    
    [Parameter]
    public bool FullWidth { get; set; } = true;
    
    [Parameter]
    public Adornment Adornment { get; set; } = Adornment.Start;
    
    [Parameter]
    public string AdornmentIcon { get; set; } = Icons.Material.Filled.Email;
    
    private async Task OnValueChanged(string value)
    {
        if (Value != value)
        {
            Value = value;
            await ValueChanged.InvokeAsync(value);
        }
    }
}