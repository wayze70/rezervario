@page "/ucet/udalost"
@using Microsoft.AspNetCore.Authorization
@inject IReservationService ReservationService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject GlobalState GlobalState

<PageTitle>Události</PageTitle>
@attribute [Authorize]

<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudPaper Class="pa-6" Elevation="4" Style="overflow-y: hidden;">
            <MudStack Spacing="2">
                <MudDatePicker @ref="_picker"
                               PickerVariant="PickerVariant.Static"
                               @bind-Date="GlobalState.SelectedDateAdmin"
                               AdditionalDateClassesFunc="GetAdditionalDateClasses"
                               Label="Vyberte datum"
                               Style="overflow-y: hidden;"/>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           FullWidth="true"
                           StartIcon="@Icons.Material.Filled.Add"
                           OnClick="@(() => NavigationManager.NavigateTo(Constants.Routes.AccountRoute.ReservationNew))">
                    Nová událost
                </MudButton>
                <MudButton Variant="Variant.Outlined"
                           Color="Color.Primary"
                           FullWidth="true"
                           StartIcon="@Icons.Material.Filled.Today"
                           OnClick="TodayAsync">
                    Dnes
                </MudButton>
            </MudStack>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="8">
        <MudStack Spacing="2">
            @if (Reservations is null)
            {
                <MudText Typo="Typo.subtitle1" Align="Align.Center" Class="mt-2">Načítám Události…</MudText>
            }
            else if (Reservations.Count == 0)
            {
                <MudText Typo="Typo.subtitle1" Align="Align.Center" Class="mt-2">Nebyly nalezeny žádné události.
                </MudText>
            }
            else if (!Reservations.Any(r =>
                             !GlobalState.SelectedDateAdmin.HasValue || r.Start.ToLocalTime().Date == GlobalState.SelectedDateAdmin.Value.Date))
            {
                <MudText Typo="Typo.subtitle1" Align="Align.Center" Class="mt-2">Žádné události pro vybrané datum.
                </MudText>
            }
            else
            {
                <MudGrid>
                    @foreach (var reservation in Reservations)
                    {
                        var startLocal = reservation.Start.ToLocalTime();
                        if (GlobalState.SelectedDateAdmin.HasValue
                            && GlobalState.SelectedDateAdmin.Value.Date != startLocal.Date)
                            continue;

                        <MudItem xs="12" sm="12" md="6" lg="4">
                            <MudCard Elevation="2">
                                <MudCardContent>
                                    <MudText Typo="Typo.h6">@reservation.Title</MudText>
                                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1" Class="me-1">
                                        <MudIcon Icon="@Icons.Material.Filled.Schedule"/>
                                        <MudText>
                                            @startLocal.ToShortTimeString() – @reservation.End.ToLocalTime().ToShortTimeString()
                                        </MudText>
                                    </MudStack>
                                    <MudText>
                                        <MudIcon Icon="@Icons.Material.Filled.People" Class="me-1"/>
                                        @reservation.CurrentCapacity / @reservation.Capacity
                                    </MudText>
                                    <MudText Color="@(reservation.IsAvailable ? Color.Success : Color.Error)">
                                        <MudIcon Icon="@(reservation.IsAvailable
                                                           ? Icons.Material.Filled.CheckCircle
                                                           : Icons.Material.Filled.Block)"
                                                 Class="me-1"/>
                                        @(reservation.IsAvailable ? "Dostupná" : "Nedostupná")
                                    </MudText>
                                </MudCardContent>
                                <MudCardActions Class="justify-end">
                                    <MudButton Variant="Variant.Outlined"
                                               Color="Color.Primary"
                                               Size="Size.Small"
                                               OnClick="@(() => NavigationManager.NavigateTo(Constants.Routes.AccountRoute.AccountReservationDetail(reservation.Id)))">
                                        Podrobnosti
                                    </MudButton>
                                </MudCardActions>
                            </MudCard>
                        </MudItem>
                    }
                </MudGrid>
            }
        </MudStack>
    </MudItem>
</MudGrid>

@code {
    private MudDatePicker _picker = null!;
    List<ReservationResponse>? Reservations { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await ReservationService.GetReservationsAsync();
        if (response.IsSuccess)
        {
            Reservations = (response.Data ?? [])
                .OrderBy(r => r.Start.ToLocalTime())
                .ToList();
        }
        else
        {
            Snackbar.Add("Chyba při načítání událostí.", Severity.Error);
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _picker.GoToDate();
        }
    }

    private string GetAdditionalDateClasses(DateTime date)
    {
        return Reservations != null
               && Reservations.Any(r => r.Start
                   .ToLocalTime()
                   .Date == date.Date)
            ? "reservation-highlight"
            : "reservation-empty";
    }

    private Task TodayAsync()
    {
        return _picker.GoToDate(DateTime.Today);
    }
}
