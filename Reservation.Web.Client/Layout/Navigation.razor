@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using Reservation.Shared.Authorization
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthStateProvider
@inject GlobalState GlobalState
@inject IAccountService AccountService

<MudNavMenu Class="mud-nav-menu">
    <AuthorizeView Context="authState">
        <Authorized>
            <MudText Align="Align.Center">
                @{
                    string? roleValue = authState.User.FindFirst(ClaimTypes.Role)?.Value;
                    if (Enum.TryParse<Role>(roleValue, out var role) && Constants.RoleInfo.GetAll().TryGetValue(role, out var roleInfo))
                    {
                        @roleInfo.DisplayName
                    }
                    else
                    {
                        @roleValue
                    }
                }
            </MudText>

            <MudNavLink Href="@Constants.Routes.AccountRoute.Account"
                        Class="me-3"
                        Icon="@Icons.Material.Filled.AccountCircle"
                        Match="NavLinkMatch.All">
                Nastavení účtu
            </MudNavLink>

            <AuthorizeView Roles="@nameof(Role.Admin)">
                <Authorized>
                    <MudNavLink Href="/ucet/zamestnanci"
                                Class="me-3"
                                Icon="@Icons.Material.Filled.People">
                        Zaměstnanci
                    </MudNavLink>
                </Authorized>
            </AuthorizeView>

            <MudNavLink Href="@Constants.Routes.AccountRoute.AccountReservation"
                        Class="me-3"
                        Icon="@Icons.Material.Filled.CalendarToday">
                Kalendář
            </MudNavLink>

            <MudNavLink OnClick="@Logout"
                        Class="me-3"
                        Icon="@Icons.Material.Filled.ExitToApp">
                Odhlásit se
            </MudNavLink>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="@Constants.Routes.Login"
                        Icon="@Icons.Material.Filled.Login">
                Přihlášení
            </MudNavLink>
            <MudNavLink Href="@Constants.Routes.Register"
                        Icon="@Icons.Material.Filled.PersonAdd">
                Registrace
            </MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>

@code {

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (string.IsNullOrEmpty(GlobalState.Identifier) &&
            user.Identity?.IsAuthenticated == true &&
            user.IsInRole(nameof(Role.Admin)))
        {
            await LoadPath();
        }

        GlobalState.IdentifierChanged += StateHasChanged;
    }


    async Task Logout()
    {
        await AuthService.LogoutAsync();
    }

    private async Task LoadPath()
    {
        var response = await AccountService.GetPath();
        if (response.IsSuccess)
        {
            GlobalState.Identifier = response.Data ?? string.Empty;
        }
    }

    public void Dispose()
    {
        GlobalState.IdentifierChanged -= StateHasChanged;
    }

}
